- name: Change /etc/hostname
  hostname:
    name: "{{ hostname }}"

- name: Ensure ufw is installed on the machine
  package:
    name: ufw
    state: present

- name: Allow TCP 22 for SSH.
  ufw:
    rule: allow
    port: "22"
    proto: tcp

- name: Allow TCP 80 for Xphish.
  ufw:
    rule: allow
    port: "80"
    proto: tcp

- name: Allow TCP 443 for Xphish.
  ufw:
    rule: allow
    port: "443"
    proto: tcp

- name: Enable ufw.
  ufw:
    state: enabled
    policy: deny
  when: enable_ufw_firewall

- name: Update APT package cache.
  apt:
    update_cache: yes

- name: Upgrade APT to the latest packages.
  apt:
    upgrade: safe

- name: Ensure /etc/ssl/csr folder exists
  file:
    path: /etc/ssl/csr
    state: directory
    mode: "0755"

- name: Ensure /etc/ssl/private folder exists
  file:
    path: /etc/ssl/private
    state: directory
    mode: "0755"

- name: Ensure /etc/ssl/crt folder exists
  file:
    path: /etc/ssl/crt
    state: directory
    mode: "0755"

- name: Install specified packages.
  apt:
    pkg: "{{ install_packages }}"
    state: latest

- name: adding existing user '{{ xphish_user }}' to group ssl-cert
  user:
    name: "{{ xphish_user }}"
    groups: ssl-cert
    append: yes

- name: Ensure the cryptography Python package is installed
  pip:
    name: cryptography

- name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
  openssl_privatekey:
    path: "{{ xphish_ssl_cert_path }}"

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: "{{ xphish_csr_path }}"
    privatekey_path: "{{ xphish_ssl_cert_path }}"
    common_name: "{{ xphish_domain }}"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: "{{ xphish_crt_path }}"
    privatekey_path: "{{ xphish_ssl_cert_path }}"
    csr_path: "{{ xphish_csr_path }}"
    provider: selfsigned

- name: Update postfix main.cf configuration file.
  template:
    src: main.cf.j2
    dest: /etc/postfix/main.cf
    backup: yes
    owner: root
    group: root
    mode: 0644

- name: Restart postfix.
  service:
    name: postfix
    state: restarted

- name: Ensure postfix is started and enabled at boot.
  service:
    name: postfix
    state: started
    enabled: yes

- name: get latest release info
  uri:
    url: "https://api.github.com/repos/husamettinarabaci/xphish/releases/latest"
    return_content: true
  register: latest_json_reponse

- name: Download latest Xphish .zip file.
  get_url:
    validate_certs: True
    url: "https://github.com/husamettinarabaci/xphish/releases/download/{{ latest_json_reponse.json.tag_name }}/xphish-{{ latest_json_reponse.json.tag_name }}-linux-64bit.zip"
    dest: "/home/{{ xphish_user }}/xphish.zip"
    mode: 0755
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"

- name: Ensure xphish user has permission for CRT file.
  file:
    path: "{{ xphish_crt_path }}"
    mode: 0755
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"

- name: Ensure xphish user has permission for SSL certificate.
  file:
    path: "{{ xphish_ssl_cert_path }}"
    mode: 0755
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"

- name: Create directory for xphish.
  file:
    path: "/home/{{ xphish_user }}/xphish_deploy"
    state: directory
    mode: 0755
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"

- name: Unzip xphish file.
  unarchive:
    src: "/home/{{ xphish_user }}/xphish.zip"
    dest: "/home/{{ xphish_user }}/xphish_deploy"
    remote_src: True # File is on target server and not locally.
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"

- name: Change ownership of Xphish folder and files.
  file:
    path: /home/{{ xphish_user }}/xphish_deploy
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"
    recurse: True

- name: Ensure xphish binary is executable
  file:
    path: /home/{{ xphish_user }}/xphish_deploy/xphish
    mode: 744

- name: Ensure xphish binary is allowed to bind to privileged ports using setcap
  capabilities:
    path: /home/{{ xphish_user }}/xphish_deploy/xphish
    capability: cap_net_bind_service+eip
    state: present

- name: Copy config.json file.
  copy:
    src: files/config.json
    dest: "/home/{{ xphish_user }}/xphish_deploy/config.json"
    owner: "{{ xphish_user }}"
    group: "{{ xphish_user }}"
    mode: 0644

- name: Ensure xphish service file is properly set
  template:
    src: xphish.service.j2
    dest: /etc/systemd/system/xphish.service
    mode: 644

- name: Ensure systemd to reread configs
  systemd:
    daemon_reload: yes

- name: Ensure xphish is properly started
  service:
    name: xphish.service
    state: started
    enabled: yes

- name: Ensure nginx is installed
  package:
    name: nginx
    state: present

- name: Ensure nginx service file is properly set
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: 644

- name: Ensure nginx service is restarted
  service:
    name: nginx
    state: reloaded
    enabled: yes

- name: get Xphish log file which contain initial password
  command: cat /home/{{ xphish_user }}/xphish_deploy/xphish.log
  register: xphish_log

- name: display log file
  debug:
    msg: "{{ xphish_log }}"

- name: Reboot the box in 1 minute.
  command: shutdown -r 1
  when: reboot_box
